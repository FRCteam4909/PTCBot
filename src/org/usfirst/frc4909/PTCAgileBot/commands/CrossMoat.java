// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4909.PTCAgileBot.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc4909.PTCAgileBot.Robot;

/**
 *
 */
public class CrossMoat extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private double startTime;
	private double flatTime;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public CrossMoat() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	startTime = Timer.getFPGATimestamp();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	//Drive Up To Moat
    	while(Robot.drivetrain.getZ()<2 && Robot.drivetrain.getZ()>0)
    	{
    		Robot.drivetrain.drive(.4, .4);
    	}
    	
    	//Drive Over Moat
    	startTime = Timer.getFPGATimestamp();
    	flatTime=startTime;
    	while(Timer.getFPGATimestamp()-flatTime>.5){
    		Robot.drivetrain.drive(1, 1);

    		if(Robot.drivetrain.getZ()<2 && Robot.drivetrain.getZ()>0){
        		flatTime=Timer.getFPGATimestamp();
    		}
    	}
    	
    	//Drive Off of Moat
    	startTime = Timer.getFPGATimestamp();
    	while(Timer.getFPGATimestamp()-startTime>1){

    		Robot.drivetrain.drive(.4, .4);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drivetrain.drive(0,0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.drivetrain.drive(0,0);
    }
}
