// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4909.PTCAgileBot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.BuiltInAccelerometer;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.VictorSP;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainLeftMotor;
    public static SpeedController drivetrainLeftMotorBack;

    public static SpeedController drivetrainRightMotor;
    public static SpeedController drivetrainRightMotorBack;
    
    public static RobotDrive drivetrainDriveControl;
    public static BuiltInAccelerometer accelerometer;
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainLeftMotor = new VictorSP(0);
        //drivetrainLeftMotor.setInverted(true);
        LiveWindow.addActuator("Drivetrain", "Left Motor", (VictorSP) drivetrainLeftMotor);
        
        drivetrainRightMotor = new VictorSP(1);
        //drivetrainRightMotor.setInverted(true);
        LiveWindow.addActuator("Drivetrain", "Right Motor", (VictorSP) drivetrainRightMotor);
        
        drivetrainLeftMotorBack = new VictorSP(2);
        //drivetrainLeftMotor.setInverted(true);
        LiveWindow.addActuator("Drivetrain", "Left Motor Back", (VictorSP) drivetrainLeftMotorBack);
        
        drivetrainRightMotorBack = new VictorSP(3);
        //drivetrainRightMotor.setInverted(true);
        LiveWindow.addActuator("Drivetrain", "Right Motor Back", (VictorSP) drivetrainRightMotorBack);
        
        
        drivetrainDriveControl = new RobotDrive(drivetrainLeftMotor, drivetrainLeftMotorBack,
        		drivetrainRightMotor, drivetrainRightMotorBack);
        
        drivetrainDriveControl.setSafetyEnabled(true);
        drivetrainDriveControl.setExpiration(0.1);
        drivetrainDriveControl.setSensitivity(0.5);
        drivetrainDriveControl.setMaxOutput(1.0);
        
        accelerometer = new BuiltInAccelerometer();


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
